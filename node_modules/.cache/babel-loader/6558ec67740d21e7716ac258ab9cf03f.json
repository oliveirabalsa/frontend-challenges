{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/leonardo/Documents/Leonardo/Projects/frontend-challenges/app/src/components/ProductDetailCard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Title, Image, Row, Input, Button, Label, Flex, InputContainer, SaveButton } from \"./styles\";\nimport Plus from \"../../assets/Plus.svg\";\nimport Menos from \"../../assets/Mask.svg\";\nimport Placeholder from \"../../assets/image-placeholder.png\";\nimport InputLarge from \"../InputLarge\";\nimport convertPrice from \"../../helpers/convertPrice\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport SnackBar from \"../SnackBar\";\nimport Loading from \"../Loading/Loading\";\nconst snackbarInitialState = {\n  message: \"\",\n  status: \"\",\n  active: false\n};\n\nconst ProductDetailCard = ({\n  id,\n  name,\n  imageUrl,\n  package: sizes,\n  quantity,\n  salePrice,\n  promotionalPrice\n}) => {\n  _s();\n\n  const [stock, setStock] = useState(quantity);\n  const [price, setSalePrice] = useState(salePrice);\n  const [promoPrice, setPromotionalPrice] = useState(promotionalPrice);\n  const [weight, setWeight] = useState(sizes.weight);\n  const [height, setHeight] = useState(sizes.height);\n  const [width, setWidth] = useState(sizes.width);\n  const [depth, setDepth] = useState(sizes.depth);\n  const [loading, setLoading] = useState(false);\n  const [snackBar, setSnackBar] = useState(snackbarInitialState);\n\n  const handleStock = value => {\n    if (value < 0) return;\n    setStock(value);\n  };\n\n  const validatePrice = price => {\n    return `R$${price.replace(/\\D/gi, \"\")}`;\n  };\n\n  const handleBlur = value => {\n    if (value.includes(\",\")) return value;\n    value = value.replace(\"R$\", \"\");\n    const [price, cents] = convertPrice(value);\n    return `R$ ${price},${cents}`;\n  };\n\n  const convertPriceToNumbers = price => {\n    return Number(price.replace(/\\D/gi, \"\"));\n  };\n\n  const handlePrice = price => {\n    const priceWithValidation = validatePrice(price);\n    setSalePrice(priceWithValidation);\n  };\n\n  const handlePromotionalPrice = price => {\n    const priceWithValidation = validatePrice(price);\n    if (!priceWithValidation) return;\n    setPromotionalPrice(priceWithValidation);\n  };\n\n  const UPDATE_PRODUCT = gql`\n    mutation UpdateSku(\n      $id: ID!\n      $name: String!\n      $quantity: Int!\n      $salePrice: Int!\n      $promotionalPrice: Int!\n      $package: JSON!\n    ) {\n      updateSku(\n        id: $id\n        name: $name\n        quantity: $quantity\n        salePrice: $salePrice\n        promotionalPrice: $promotionalPrice\n        package: $package\n      ) {\n        id\n        name\n        quantity\n        salePrice\n        promotionalPrice\n        package\n      }\n    }\n  `;\n  const [updateProduct] = useMutation(UPDATE_PRODUCT);\n\n  const handleUpdate = async () => {\n    var _response$data;\n\n    const priceParsed = convertPriceToNumbers(price);\n    const promotionalPriceParsed = convertPriceToNumbers(promoPrice);\n    setLoading(true);\n    const response = await updateProduct({\n      variables: {\n        id,\n        name,\n        quantity: stock,\n        salePrice: priceParsed,\n        promotionalPrice: promotionalPriceParsed,\n        package: {\n          weight,\n          height,\n          width,\n          depth\n        }\n      }\n    });\n\n    if (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.updateSku) {\n      setLoading(false);\n      setSnackBar({\n        status: \"success\",\n        message: \"Dados alterados com sucesso\",\n        active: true\n      });\n      setTimeout(() => {\n        setSnackBar(snackbarInitialState);\n      }, 3000);\n    } else {\n      setLoading(false);\n      setSnackBar({\n        status: \"error\",\n        message: \"Falha ao atualizar os dados\",\n        active: true\n      });\n      setTimeout(() => {\n        setSnackBar(snackbarInitialState);\n      }, 3000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SnackBar, { ...snackBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 18\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        src: imageUrl ? imageUrl : Placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Estoque\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: stock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleStock(stock - 1),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Menos,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleStock(stock + 1),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Plus,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Pre\\xE7o de venda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            size: 100,\n            value: price,\n            onChange: e => handlePrice(e.target.value),\n            onBlur: e => setSalePrice(handleBlur(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Pre\\xE7o promocional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            size: 100,\n            value: promoPrice,\n            onChange: e => handlePromotionalPrice(e.target.value),\n            onBlur: e => setPromotionalPrice(handleBlur(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputLarge, {\n        name: \"Peso\",\n        value: weight,\n        unit: \"kg\",\n        onChange: value => setWeight(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputLarge, {\n        name: \"Altura\",\n        value: height,\n        unit: \"cm\",\n        onChange: value => setHeight(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputLarge, {\n        name: \"Largura\",\n        value: width,\n        unit: \"cm\",\n        onChange: value => setWidth(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputLarge, {\n        name: \"Profundidade\",\n        value: depth,\n        unit: \"cm\",\n        onChange: value => setDepth(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SaveButton, {\n        onClick: () => handleUpdate(),\n        children: \"Salvar altera\\xE7\\xF5es\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductDetailCard, \"fLOTUc5SOkMCHhALJPKKqbD0+sw=\", false, function () {\n  return [useMutation];\n});\n\n_c = ProductDetailCard;\nexport default ProductDetailCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetailCard\");","map":{"version":3,"sources":["/home/leonardo/Documents/Leonardo/Projects/frontend-challenges/app/src/components/ProductDetailCard/index.tsx"],"names":["React","useState","Container","Title","Image","Row","Input","Button","Label","Flex","InputContainer","SaveButton","Placeholder","InputLarge","convertPrice","gql","useMutation","SnackBar","Loading","snackbarInitialState","message","status","active","ProductDetailCard","id","name","imageUrl","package","sizes","quantity","salePrice","promotionalPrice","stock","setStock","price","setSalePrice","promoPrice","setPromotionalPrice","weight","setWeight","height","setHeight","width","setWidth","depth","setDepth","loading","setLoading","snackBar","setSnackBar","handleStock","value","validatePrice","replace","handleBlur","includes","cents","convertPriceToNumbers","Number","handlePrice","priceWithValidation","handlePromotionalPrice","UPDATE_PRODUCT","updateProduct","handleUpdate","priceParsed","promotionalPriceParsed","response","variables","data","updateSku","setTimeout","Menos","Plus","e","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Container,\n  Title,\n  Image,\n  Row,\n  Input,\n  Button,\n  Label,\n  Flex,\n  InputContainer,\n  SaveButton,\n} from \"./styles\";\nimport Plus from \"../../assets/Plus.svg\";\nimport Menos from \"../../assets/Mask.svg\";\n\nimport Placeholder from \"../../assets/image-placeholder.png\";\nimport InputLarge from \"../InputLarge\";\nimport convertPrice from \"../../helpers/convertPrice\";\n\nimport { gql, useMutation } from \"@apollo/client\";\nimport SnackBar from \"../SnackBar\";\nimport Loading from \"../Loading/Loading\";\n\nconst snackbarInitialState = {\n  message: \"\",\n  status: \"\",\n  active: false,\n};\n\nconst ProductDetailCard: React.FC = ({\n  id,\n  name,\n  imageUrl,\n  package: sizes,\n  quantity,\n  salePrice,\n  promotionalPrice,\n}: any) => {\n  const [stock, setStock] = useState(quantity);\n  const [price, setSalePrice] = useState(salePrice);\n  const [promoPrice, setPromotionalPrice] = useState(promotionalPrice);\n  const [weight, setWeight] = useState(sizes.weight);\n  const [height, setHeight] = useState(sizes.height);\n  const [width, setWidth] = useState(sizes.width);\n  const [depth, setDepth] = useState(sizes.depth);\n  const [loading, setLoading] = useState(false);\n  const [snackBar, setSnackBar] = useState(snackbarInitialState);\n\n  const handleStock = (value: number) => {\n    if (value < 0) return;\n    setStock(value);\n  };\n\n  const validatePrice = (price: string) => {\n    return `R$${price.replace(/\\D/gi, \"\")}`;\n  };\n\n  const handleBlur = (value: string) => {\n    if (value.includes(\",\")) return value;\n    value = value.replace(\"R$\", \"\");\n    const [price, cents] = convertPrice(value);\n\n    return `R$ ${price},${cents}`;\n  };\n\n  const convertPriceToNumbers = (price: any) => {\n    return Number(price.replace(/\\D/gi, \"\"));\n  };\n\n  const handlePrice = (price: string) => {\n    const priceWithValidation = validatePrice(price);\n    setSalePrice(priceWithValidation);\n  };\n\n  const handlePromotionalPrice = (price: string) => {\n    const priceWithValidation = validatePrice(price);\n    if (!priceWithValidation) return;\n\n    setPromotionalPrice(priceWithValidation);\n  };\n\n  const UPDATE_PRODUCT = gql`\n    mutation UpdateSku(\n      $id: ID!\n      $name: String!\n      $quantity: Int!\n      $salePrice: Int!\n      $promotionalPrice: Int!\n      $package: JSON!\n    ) {\n      updateSku(\n        id: $id\n        name: $name\n        quantity: $quantity\n        salePrice: $salePrice\n        promotionalPrice: $promotionalPrice\n        package: $package\n      ) {\n        id\n        name\n        quantity\n        salePrice\n        promotionalPrice\n        package\n      }\n    }\n  `;\n\n  const [updateProduct] = useMutation(UPDATE_PRODUCT);\n\n  const handleUpdate = async () => {\n    const priceParsed = convertPriceToNumbers(price);\n    const promotionalPriceParsed = convertPriceToNumbers(promoPrice);\n    setLoading(true);\n    const response = await updateProduct({\n      variables: {\n        id,\n        name,\n        quantity: stock,\n        salePrice: priceParsed,\n        promotionalPrice: promotionalPriceParsed,\n        package: {\n          weight,\n          height,\n          width,\n          depth,\n        },\n      },\n    });\n    if (response?.data?.updateSku) {\n      setLoading(false);\n      setSnackBar({\n        status: \"success\",\n        message: \"Dados alterados com sucesso\",\n        active: true,\n      });\n      setTimeout(() => {\n        setSnackBar(snackbarInitialState);\n      }, 3000);\n    } else {\n      setLoading(false);\n      setSnackBar({\n        status: \"error\",\n        message: \"Falha ao atualizar os dados\",\n        active: true,\n      });\n      setTimeout(() => {\n        setSnackBar(snackbarInitialState);\n      }, 3000);\n    }\n  };\n\n  return (\n    <>\n      <SnackBar {...snackBar} />\n      {loading ? <Loading /> : \"\"}\n      <Container>\n        <Title>{name}</Title>\n        <Image src={imageUrl ? imageUrl : Placeholder} />\n        <Row>\n          <Label>Estoque</Label>\n          <Input value={stock} />\n          <Flex>\n            <Button onClick={() => handleStock(stock - 1)}>\n              <img src={Menos} alt=\"\" />\n            </Button>\n            <Button onClick={() => handleStock(stock + 1)}>\n              <img src={Plus} alt=\"\" />\n            </Button>\n          </Flex>\n        </Row>\n        <Row>\n          <InputContainer>\n            <Label>Preço de venda</Label>\n            <Input\n              size={100}\n              value={price}\n              onChange={(e) => handlePrice(e.target.value)}\n              onBlur={(e) => setSalePrice(handleBlur(e.target.value))}\n            />\n          </InputContainer>\n          <InputContainer>\n            <Label>Preço promocional</Label>\n            <Input\n              size={100}\n              value={promoPrice}\n              onChange={(e) => handlePromotionalPrice(e.target.value)}\n              onBlur={(e) => setPromotionalPrice(handleBlur(e.target.value))}\n            />\n          </InputContainer>\n        </Row>\n        <InputLarge\n          name=\"Peso\"\n          value={weight}\n          unit=\"kg\"\n          onChange={(value: any) => setWeight(value)}\n        />\n        <InputLarge\n          name=\"Altura\"\n          value={height}\n          unit=\"cm\"\n          onChange={(value: any) => setHeight(value)}\n        />\n        <InputLarge\n          name=\"Largura\"\n          value={width}\n          unit=\"cm\"\n          onChange={(value: any) => setWidth(value)}\n        />\n        <InputLarge\n          name=\"Profundidade\"\n          value={depth}\n          unit=\"cm\"\n          onChange={(value: any) => setDepth(value)}\n        />\n        <SaveButton onClick={() => handleUpdate()}>\n          Salvar alterações\n        </SaveButton>\n      </Container>\n    </>\n  );\n};\n\nexport default ProductDetailCard;\n"]},"metadata":{},"sourceType":"module"}